@use "themes" as t;
@use "mixins";

.canvas {
  max-width: 100vw;
}

.project-canvas {
  height: 100%;
  display: flex;
  flex-direction: column;

  &:not(.active) {
    display: none;
  }

  .project-controls {
    display: flex;
    padding: t.$padding-m t.$padding-xl;
    border-bottom: solid t.$border-width-s t.$frame-border-color;

    .column-section {
      width: 33.33%;
      display: flex;

      &.left {
        justify-content: left;
      }

      &.middle {
        justify-content: center;

        h1 {
          font-size: t.$font-size-base;
          line-height: 1rem;
          margin: 0;
        }
      }

      &.right {
        justify-content: right;
      }
    }

    button {
      padding: t.$padding-s t.$padding-xl;
      border-radius: t.$border-radius-s;
    }

    select {
      padding: t.$padding-m t.$padding-xl;
      border-radius: t.$border-radius-s;
    }

    .analyze-commands-group {
      display: inline-block;
      margin-left: t.$margin-l;

      .primary-analyze-btn {
        &.with_options {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }
      }

      .dropdown {
        position: relative;
        display: inline-block;

        &:hover .dropdown-content {
          display: block;
        }

        .dropdown-btn {
          padding-left: t.$padding-s;
          padding-right: t.$padding-s;
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
          border-left: t.$border-width-s black solid;
        }

        .dropdown-content {
          display: none;
          position: absolute;
          z-index: 1;

          background-color: t.$background-accent-color;
          border-radius: t.$border-radius-s;

          list-style: none;
          margin: 0;
          padding-left: 0;

          li {
            display: block;
            color: t.$body-text-color;
            text-decoration: none;

            padding: t.$padding-s t.$padding-xxl;

            &:not(:last-child) {
              border-bottom: t.$border-width-s t.$frame-border-color solid;
            }

            &:hover {
              color: t.$primary-button-hover-color;
              background-color: t.$primary-button-hover-background-color;
            }
          }
        }
      }
    }

    .reload-project-graph {
      svg {
        vertical-align: text-bottom;
        transform: scale(-1, 1);

        &.spinner {
          animation: spinner-xmirror 2s linear infinite;
        }
      }
    }
  }

  .canvas {
    display: flex;
    flex-grow: 1;
    justify-content: space-between;
  }

  .project-canvas-navbar {
    background-color: t.$frame-background-color;
    padding: t.$padding-m;
    border-right: solid t.$border-width-s t.$frame-border-color;
  }

  .syre-ui-drawer {
    width: t.$drawer-width;
    height: 100%;
    max-height: 100vh;
    overflow-y: scroll;
    background-color: t.$frame-background-color;
    box-sizing: border-box;

    &.hidden {
      display: none;
    }

    .drawer-contents {
      overflow: auto;
    }
  }

  .details-bar-drawer {
    .drawer-contents {
      height: 100%;
    }

    .project-canvas-details-bar {
      height: 100%;
    }
  }

  .resources-bar-drawer {
    justify-content: left;

    .drawer-contents {
      width: 100%;
    }
  }

    .layers-bar {
      user-select: none;
      -webkit-user-select: none;
      overflow: auto;

      .layer:not(.expanded) .children,
      .layer:not(.expanded) .layer.assets,
      .layer.assets:not(.expanded) .layer-assets {
        display: none;
      }

      .layer {
        cursor: pointer;
        padding: t.$padding-s 0;

        &.selected > .layer-title {
          background-color: t.$background-accent-color;
        }

        .info-group {
          display: flex;
          flex-grow: 1;
        }

        .controls-group {
          span:not(:last-child) {
            padding-right: t.$padding-m;
          }

        }

		.controls-group .descendant-alert {
			visibility: hidden;
		}

		&:has(.layer-asset .alert-icon) > .layer-title .controls-group .descendant-alert {
			visibility: visible;
		}

        span {
          line-height: 100%;
          vertical-align: text-top;
        }

        .layer-title {
          display: flex;
          align-items: center;
          height: 2rem;
          padding: 0 t.$padding-m;
          border: solid t.$border-width-s transparent;

          &:hover {
            border-color: t.$primary-color;
          }

          .resource-icon {
            padding-left: t.$padding-s;
          }

          .name {
            padding-left: t.$padding-s;
          }

          .controls-group {
            display: flex;
          }
        }
      }

      .children,
      .layer.assets,
      .layer-asset {
        // TODO Use text-indent
        padding-left: t.$padding-xxl;
      }

      .layer-asset {
        display: flex;
        align-items: center;
        height: 2rem;
		padding-right: t.$padding-m;
        border: solid t.$border-width-s transparent;

        &:hover {
          border-color: t.$primary-color;
        }

        &.selected {
          background-color: t.$background-accent-color;
        }

        .name {
          padding-left: t.$padding-s;
        }

		.descendant-alert {
			display: none;
		}

		&:has(.layer-asset .alert-icon) .descendant-alert {
			display: inline;
		}
      }
    }

	.search-bar {
		padding-left: t.$padding-m;
		padding-right: t.$padding-m;

		.search-form {
			border-bottom: t.$background-contrast-color t.$border-width-s solid;

			label {
				padding-right: t.$padding-m;
			}

			input {
				background-color: transparent;
				padding: 0;
				width: 0;
			}
		}

		.widget-controls {
			button {
				background-color: transparent;
				padding: 0;
			}
		}

		ul.search-results {
			list-style: none;
			padding: 0;

			li {
				padding-top: t.$padding-s;
				padding-bottom: t.$padding-s;

				&.selected {
					background-color: t.$background-accent-color;
				}

				.icon {
					padding-right: t.$padding-m;
				}
			}
		}
	}

  .project-canvas-content {
    flex: 1;
    overflow: auto;
    width: t.$canvas-width;
    height: t.$canvas-height;
    min-height: 100%;
    display: flex;

    .project {
      flex-grow: 1;
    }
  }
}
