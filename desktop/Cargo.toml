[package]
name = "thot-desktop"
version = "0.10.1"
edition = "2021"

authors = [ "Brian Carlsen <carlsen.bri@gmail.com>" ]
description = "Thot desktop application."

homepage = "https://thot.so"
repository = "https://github.com/thot-data/thot"
keywords = [ "thot", "thot-data", "data", "data-analysis", "data-management" ]
categories = [ "gui", "science" ]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
aquamarine = { workspace = true } # TODO: Only needed for documentation.
futures = "0.3"
gloo-storage = "0.3"
gloo-timers = "0.3"
indexmap = { workspace = true }
js-sys = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true } # TODO: Only required for https://github.com/tauri-apps/tauri/issues/6078.
serde-wasm-bindgen = { workspace = true }
tauri-sys = { workspace = true, features = ["dialog", "event", "path"] }
time = { version = "0.3", features = ["wasm-bindgen"] }
tracing = { workspace = true }
tracing-subscriber = { version = "0.3.16", features = ["time"] }
tracing-web = "0.1.2"
uuid = { workspace = true, features = ["js", "serde", "v4"] }
wasm-bindgen = { workspace = true, features = ["serde-serialize"] }
wasm-bindgen-futures = { workspace = true }
yew = { workspace = true, features = ["csr"] }
yew-router = { workspace = true }

thot-core = { path = "../core", features = ["yew", "serde"] }
thot-local = { path = "../local", default-features = false }
thot-ui = { path = "../ui" }
thot-desktop-lib = { path = "src-lib" }
thot-local-database = { path = "../local/database" }

[dependencies.web-sys]
workspace = true
features = [
    "DomStringMap",
    "DragEvent",
    "Event",
    "FocusEvent",
    "HtmlElement",
    "HtmlInputElement",
    "InputEvent",
    "ScrollBehavior",
    "ScrollIntoViewOptions",
    "ScrollLogicalPosition",
    "SubmitEvent",
    "SvgCircleElement",
    "SvggElement",
    "SvgForeignObjectElement",
    "SvgPolylineElement",
    "SvgsvgElement",
    "SvgUseElement",
]

[dependencies.yew_icons]
workspace = true
features = [
    "BootstrapFiles",
    "FontAwesomeRegularEye",
    "FontAwesomeRegularEyeSlash",
    "FontAwesomeRegularFolder",
    "FontAwesomeSolidCaretDown",
    "FontAwesomeSolidCaretRight",
]
