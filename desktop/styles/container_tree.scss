@use "themes" as t;
@use "mixins";

$control-button-size: 25px;

.container-tree {
  position: relative;
  text-align: center;

  button.syre-ui-remove-resource {
    all: unset;
    display: flex;
    align-items: center;
    padding: t.$padding-s;
    box-sizing: border-box;

    &:hover {
      cursor: pointer;
      background-color: t.$secondary-button-hover-background-color;
    }
  }

  .container-node {
    user-select: none;
    -webkit-user-select: none;
    position: relative; // positioning for add child button
    display: inline-block;

    text-align: center;
    background-color: t.$background-accent-color;

    min-width: t.$card-min-width;

    padding: t.$padding-m t.$padding-xl calc(0.5 * #{$control-button-size})
      t.$padding-xl; // give room for add child button

    border: t.$border-width-m solid transparent;
    border-radius: t.$border-radius-m;
    margin: t.$padding-m t.$padding-m $control-button-size t.$padding-m;

    transition: border-color t.$transition-fast;

    &.selected {
      border-color: t.$primary-color;
    }

    &.dragover-active {
      border-color: t.$primary-color;
    }

    &:hover .container-menu-control,
    &:hover .add-child-container-control {
      display: inherit;
      opacity: 1;
    }

    .container-menu-control {
      position: absolute;
      top: t.$padding-m;
      right: t.$padding-m;

      opacity: 0;
      transition: opacity t.$transition-fast;

      button.container-menu-toggle {
        background-color: transparent;
        padding: 0;
        border: none;
        box-shadow: none;
      }
    }

    .container-name {
      font-family: t.$title-font-family;
    }

    .container-control {
      width: $control-button-size;
      height: $control-button-size;
      vertical-align: bottom;
      padding: 0;
      border-radius: t.$border-radius-s;
      margin: 5px;
      background-color: t.$background-color;

      svg {
        width: calc(0.7 * #{$control-button-size});
      }
    }

    .add-child-container-control {
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translate(-50%, 50%);

      opacity: 0;
      transition: opacity t.$transition-fast;
      button {
        width: $control-button-size;
        height: $control-button-size;
        padding: 0;
        border-radius: 50%;
        color: t.$primary-button-color;
        background-color: t.$primary-button-background-color;

        &:hover {
          background-color: t.$primary-button-hover-background-color;
        }
      }
    }
  }

  .children {
    display: flex;
    justify-content: space-evenly;

    .child-node-marker {
      font-family: t.$title-font-family;
    }
  }

  .container-preview {
    height: t.$card-height;
    overflow: auto;

    .syre-ui-metadata-preview {
      text-align: left;
      list-style: none;
      padding: 0;

      .metadatum-key {
        display: inline-block;
        font-weight: bold;
        margin-right: t.$margin-m;

        &::after {
          content: ":";
        }
      }
    }

    .assets-preview {
      .syre-ui-assets-list {
        text-align: left;
        list-style: none;
        padding: 0;

        .syre-ui-asset-preview {
          &.active {
            background-color: t.$primary-color;
          }

          .syre-ui-asset-name {
            @include mixins.hide-text-overflow;
          }
        }
      }

      .syre-ui-asset {
        display: flex;
        gap: 4px;

        .syre-ui-asset-name {
          flex-grow: 1;
        }

        .alert-icon svg {
          vertical-align: middle;
        }

        button.syre-ui-remove-resource {
          visibility: hidden;
        }

        &:hover button.syre-ui-remove-resource {
          visibility: visible;
        }

        &:hover .syre-ui-asset-name {
          color: t.$hover-text-color;
        }
      }
    }

    .syre-ui-analysis-associations-preview {
      .syre-ui-analysis-associations-list {
        text-align: left;
        list-style: none;
        padding: 0;

        .syre-ui-analysis-association-preview {
          display: flex;
          gap: t.$padding-m;

          &.no-name .analysis-name {
            text-decoration: line-through;
          }

          .analyiss-name {
            @include mixins.hide-text-overflow;
            flex-grow: 1;
          }

          .analysis-priority {
            display: inline-block;

            &::before {
              content: "(";
            }

            &::after {
              content: ")";
            }
          }

          .analysis-autorun {
            display: flex;
            align-items: center;
            cursor: pointer;
          }

          button.syre-ui-remove-resource {
            visibility: hidden;
          }

          &:hover button.syre-ui-remove-resource {
            visibility: visible;
          }
        }
      }
    }
  }

  .child-node-marker {
    margin: t.$padding-m;
  }

  .container-tree-node-connectors {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    width: 100%;
    height: 100%;

    .container-tree-node-connector {
      fill: none;
      stroke: t.$background-accent-color;
      stroke-width: 1;
    }

    .container-tree-visibility-control {
      fill: t.$background-accent-color;
      stroke: none;
      opacity: 0;
      transition: opacity t.$transition-fast;

      &:hover {
        opacity: 1;
      }
    }
  }
}
